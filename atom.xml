<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chengpeng&#39;s blogs</title>
  
  
  <link href="https://github.com/CPyeah/atom.xml" rel="self"/>
  
  <link href="https://github.com/CPyeah/"/>
  <updated>2022-11-21T03:26:22.873Z</updated>
  <id>https://github.com/CPyeah/</id>
  
  <author>
    <name>chengpeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DynamoDB</title>
    <link href="https://github.com/CPyeah/2022/06/07/database/Dynamo%20paper/"/>
    <id>https://github.com/CPyeah/2022/06/07/database/Dynamo%20paper/</id>
    <published>2022-06-07T12:31:15.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;Amazon 是世界上最大的电商之一。&lt;/p&gt;
&lt;p&gt;在这里我们所遇到的最大挑战之一就是 &lt;strong&gt;超大规模下的稳定性问题&lt;/strong&gt; （reliability at massive scale）。即使是最微小的故障（the slightest outage），也会造成巨大的经济 损失，而且会降低客户对我们的信任。Amazon.com 作为一个为全球提供 web 服务的平台， 其底层的基础设施是由分布在全球的数据中心中成千上万的服务器和网络设备组成的。在如 此庞大的规模下，大大小小的组件故障是不断在发生的，而我们应对这些故障时所采取 的 &lt;strong&gt;管理持久状态的方式&lt;/strong&gt; （the way persistent state is managed）， &lt;strong&gt;驱动着软件系 统的可靠性（reliability）和可扩展性（scalability）的发展&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;本文介绍 Dynamo —— 一个&lt;strong&gt;高可用键值存储系统&lt;/strong&gt; —— 的设计和实现。Amazon 的一些核心 服务就是基于 Dynamo 提供不间断服务的（always-on experience）。为了达到这种等级的 可用性（level of availability），Dynamo  &lt;strong&gt;牺牲了几种特定故障场景下的一致性&lt;/strong&gt; 。另 外，Dynamo 大量使用了 &lt;strong&gt;对象版本化&lt;/strong&gt; （object versioning）和&lt;strong&gt;应用协助的冲突解决&lt;/strong&gt; （application-assisted conflict resolution）机制，给开发者提供了一种新颖的接口。&lt;/p&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="dynamo" scheme="https://github.com/CPyeah/tags/dynamo/"/>
    
    <category term="distributed" scheme="https://github.com/CPyeah/tags/distributed/"/>
    
  </entry>
  
  <entry>
    <title>使用 Redis 集群进行扩展</title>
    <link href="https://github.com/CPyeah/2022/05/01/database/Redis%20%E9%9B%86%E7%BE%A4/"/>
    <id>https://github.com/CPyeah/2022/05/01/database/Redis%20%E9%9B%86%E7%BE%A4/</id>
    <published>2022-05-01T08:22:31.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;p&gt;使用 Redis 集群进行横向扩展&lt;/p&gt;
&lt;p&gt;Redis 使用称为 Redis 集群的部署拓扑进行水平扩展。本主题将教您如何在生产环境中设置、测试和操作 Redis 集群。您将从最终用户的角度了解 Redis 集群的可用性和一致性特征。&lt;/p&gt;
&lt;p&gt;如果您计划运行生产 Redis 集群部署或想要更好地了解 Redis 集群的内部工作原理，请参阅&lt;a href=&quot;https://redis.io/topics/cluster-spec&quot;&gt;Redis 集群规范&lt;/a&gt; 。要了解 Redis Enterprise 如何处理缩放，请参阅&lt;a href=&quot;https://redis.com/redis-enterprise/technology/linear-scaling-redis-enterprise/&quot;&gt;使用 Redis Enterprise 进行线性缩放&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="redis" scheme="https://github.com/CPyeah/tags/redis/"/>
    
    <category term="redis cluster" scheme="https://github.com/CPyeah/tags/redis-cluster/"/>
    
  </entry>
  
  <entry>
    <title>Redis Sentinel 的高可用性</title>
    <link href="https://github.com/CPyeah/2022/04/28/database/Redis%20Sentinel%20%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7/"/>
    <id>https://github.com/CPyeah/2022/04/28/database/Redis%20Sentinel%20%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7/</id>
    <published>2022-04-28T12:11:45.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;p&gt;非集群Redis的高可用&lt;/p&gt;
&lt;p&gt;Redis Sentinel 在不使用&lt;a href=&quot;https://redis.io/docs/manual/scaling&quot;&gt;Redis Cluster&lt;/a&gt; 时为 Redis 提供高可用性。&lt;/p&gt;
&lt;p&gt;Redis Sentinel 还提供其他附带任务，例如监控、通知并充当客户端的配置提供程序。&lt;/p&gt;
&lt;p&gt;这是宏观层面（即 &lt;em&gt;大图&lt;/em&gt; ）的 Sentinel 功能的完整列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;监控&lt;/strong&gt; 。Sentinel 不断检查您的主实例和副本实例是否按预期工作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通知&lt;/strong&gt; 。Sentinel 可以通过 API 通知系统管理员或其他计算机程序，其中一个受监控的 Redis 实例出现问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动故障转移&lt;/strong&gt; 。如果 master 没有按预期工作，Sentinel 可以启动一个故障转移过程，其中一个副本被提升为 master，其他额外的副本被重新配置为使用新的 master，并且使用 Redis 服务器的应用程序被告知要使用的新地址连接时。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置提供商&lt;/strong&gt; 。Sentinel 充当客户端服务发现的权威来源：客户端连接到 Sentinels 以询问负责给定服务的当前 Redis master 的地址。如果发生故障转移，Sentinels 将报告新地址。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="redis" scheme="https://github.com/CPyeah/tags/redis/"/>
    
    <category term="redis sentinel" scheme="https://github.com/CPyeah/tags/redis-sentinel/"/>
    
  </entry>
  
  <entry>
    <title>Redis高级数据结构</title>
    <link href="https://github.com/CPyeah/2022/04/21/database/Redis%E9%9B%86%E7%BE%A4%E8%A7%84%E8%8C%83/"/>
    <id>https://github.com/CPyeah/2022/04/21/database/Redis%E9%9B%86%E7%BE%A4%E8%A7%84%E8%8C%83/</id>
    <published>2022-04-21T14:35:23.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;设计的主要特性和原理&quot;&gt;&lt;a href=&quot;#设计的主要特性和原理&quot; class=&quot;headerlink&quot; title=&quot;设计的主要特性和原理&quot;&gt;&lt;/a&gt;设计的主要特性和原理&lt;/h2&gt;&lt;h3 id=&quot;Redis-集群目标&quot;&gt;&lt;a href=&quot;#Redis-集群目标&quot; class=&quot;headerlink&quot; title=&quot;Redis 集群目标&quot;&gt;&lt;/a&gt;Redis 集群目标&lt;/h3&gt;&lt;p&gt;Redis Cluster 是 Redis 的分布式实现，按照设计中的重要性顺序具有以下目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高性能和线性可扩展性高达 1000 个节点。没有代理，使用异步复制，不对值执行合并操作。&lt;/li&gt;
&lt;li&gt;可接受的写入安全程度：系统尝试（以最大努力的方式）保留所有来自与大多数主节点连接的客户端的写入。通常有一些小窗口，其中确认的写入可能会丢失。当客户端位于少数分区中时，丢失已确认写入的窗口更大。&lt;/li&gt;
&lt;li&gt;可用性：Redis 集群能够在大多数主节点可访问的分区中存活下来，并且每个不再可访问的主节点至少有一个可访问的副本。此外，使用 &lt;em&gt;replicas migration&lt;/em&gt; ，不再被任何副本复制的 masters 将从被多个副本覆盖的 master 接收一个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文档中描述的内容在 Redis 3.0 或更高版本中实现。&lt;/p&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="redis" scheme="https://github.com/CPyeah/tags/redis/"/>
    
    <category term="redis cluster" scheme="https://github.com/CPyeah/tags/redis-cluster/"/>
    
  </entry>
  
  <entry>
    <title>深入理解Java虚拟机</title>
    <link href="https://github.com/CPyeah/2022/03/05/java/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>https://github.com/CPyeah/2022/03/05/java/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA/</id>
    <published>2022-03-05T12:54:21.000Z</published>
    <updated>2022-11-21T03:26:22.941Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;这边文章我们深入了解一下Java虚拟机。&lt;br&gt;我会了解到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虚拟机的种类大概有哪些？&lt;/li&gt;
&lt;li&gt;JVM的内存管理模型是什么样子的？&lt;/li&gt;
&lt;li&gt;Java对象的创建过程是什么样子的？&lt;/li&gt;
&lt;li&gt;Java对象的内存布局是什么样子的？&lt;/li&gt;
&lt;li&gt;如何判断对象是垃圾？&lt;/li&gt;
&lt;li&gt;Java中引用的类型有哪些？&lt;/li&gt;
&lt;li&gt;垃圾收集算法有哪些？&lt;/li&gt;
&lt;li&gt;HopSpot的垃圾收器是怎么实现的？&lt;/li&gt;
&lt;li&gt;经典的垃圾收集器有哪些？&lt;/li&gt;
&lt;li&gt;低延迟的垃圾收集器有哪些？&lt;/li&gt;
&lt;li&gt;如何选择垃圾收集器？&lt;/li&gt;
&lt;li&gt;JVM提供了哪些监控工具？&lt;/li&gt;
&lt;li&gt;市面上有哪些可视化的工具？&lt;/li&gt;
&lt;li&gt;JVM是怎么调优的？&lt;/li&gt;
&lt;li&gt;Class文件结构是什么样子的？&lt;/li&gt;
&lt;li&gt;常见的字节码指令有哪些？&lt;/li&gt;
&lt;li&gt;Java编译的流程是什么样子的？&lt;/li&gt;
&lt;li&gt;后端编译的过程是什么样子的？&lt;/li&gt;
&lt;li&gt;Java内存模型是什么样子的？&lt;/li&gt;
&lt;li&gt;volatile关键字有什么用？&lt;/li&gt;
&lt;li&gt;Java的多线程是怎么实现的？&lt;/li&gt;
&lt;li&gt;Java中有哪些锁优化？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;希望对你有所帮助～&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://github.com/CPyeah/categories/java/"/>
    
    
    <category term="java" scheme="https://github.com/CPyeah/tags/java/"/>
    
    <category term="jvm" scheme="https://github.com/CPyeah/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>Java之Netty.md</title>
    <link href="https://github.com/CPyeah/2021/12/25/java/Java%E4%B9%8BNetty/"/>
    <id>https://github.com/CPyeah/2021/12/25/java/Java%E4%B9%8BNetty/</id>
    <published>2021-12-25T02:18:43.000Z</published>
    <updated>2022-11-21T03:26:22.913Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Netty是一套支持NIO的客户端-服务器框架。&lt;br&gt;高性能、高并发。&lt;br&gt;支持异步通信。&lt;br&gt;他是使用Java编写的。&lt;br&gt;在Java领域中，他是IO界的老大，特别是网络IO。&lt;br&gt;很多项目都用它，比如Dubbo，RocketMQ，Cassandra等等。&lt;/p&gt;
&lt;p&gt;在这片文章中，我们会学习到：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;常见的IO模型&lt;/li&gt;
&lt;li&gt;Netty项目&lt;/li&gt;
&lt;li&gt;Netty实战&lt;/li&gt;
&lt;li&gt;Netty在我司生产中的应用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那我们开始吧！&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://github.com/CPyeah/categories/java/"/>
    
    
    <category term="java" scheme="https://github.com/CPyeah/tags/java/"/>
    
    <category term="netty" scheme="https://github.com/CPyeah/tags/netty/"/>
    
  </entry>
  
  <entry>
    <title>Go语言学习-快速入门</title>
    <link href="https://github.com/CPyeah/2021/11/27/go/basic-grammar/"/>
    <id>https://github.com/CPyeah/2021/11/27/go/basic-grammar/</id>
    <published>2021-11-27T07:29:29.000Z</published>
    <updated>2022-11-21T03:26:22.913Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;最近觉得Go语言很有前途，语法灵活，容器化部署方便，资源消耗小。&lt;br&gt;而且还有强力的并发能力：Goroutines&lt;br&gt;所以决定从今天开始，学习Go语言。&lt;/p&gt;
&lt;p&gt;这一次我们将学习到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Golang基本概念&lt;/li&gt;
&lt;li&gt;基本数据类型&lt;/li&gt;
&lt;li&gt;基本语法&lt;/li&gt;
&lt;li&gt;复杂类型&lt;/li&gt;
&lt;li&gt;方法与协程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们现在开始吧！&lt;/p&gt;</summary>
    
    
    
    <category term="go" scheme="https://github.com/CPyeah/categories/go/"/>
    
    
    <category term="go" scheme="https://github.com/CPyeah/tags/go/"/>
    
    <category term="basic-grammar" scheme="https://github.com/CPyeah/tags/basic-grammar/"/>
    
  </entry>
  
  <entry>
    <title>SystemDesign:开放平台</title>
    <link href="https://github.com/CPyeah/2021/10/18/system_design/open_platform/"/>
    <id>https://github.com/CPyeah/2021/10/18/system_design/open_platform/</id>
    <published>2021-10-18T09:38:34.000Z</published>
    <updated>2022-11-21T03:26:22.941Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;客户端注册管理&lt;/li&gt;
&lt;li&gt;客户端权限验证&lt;/li&gt;
&lt;li&gt;客户端调用内部接口&lt;/li&gt;
&lt;li&gt;消息接收&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="system_design" scheme="https://github.com/CPyeah/categories/system-design/"/>
    
    
    <category term="system_design" scheme="https://github.com/CPyeah/tags/system-design/"/>
    
    <category term="open_platform" scheme="https://github.com/CPyeah/tags/open-platform/"/>
    
  </entry>
  
  <entry>
    <title>MySQL调优</title>
    <link href="https://github.com/CPyeah/2021/09/11/database/MySQL%E8%B0%83%E4%BC%98/"/>
    <id>https://github.com/CPyeah/2021/09/11/database/MySQL%E8%B0%83%E4%BC%98/</id>
    <published>2021-09-11T05:47:39.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;这篇文章，我们将谈到SQL优化的相关知识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们会讲到如何合理定义数据结构&lt;/li&gt;
&lt;li&gt;如何设计高效的索引&lt;/li&gt;
&lt;li&gt;如果写出高效的SQL语句&lt;/li&gt;
&lt;li&gt;如果发生了慢查询，我们如何分析&lt;/li&gt;
&lt;li&gt;如何选择其他的组件来替换MySQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在，我们开始吧！！&lt;/p&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="mysql" scheme="https://github.com/CPyeah/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL事务原理</title>
    <link href="https://github.com/CPyeah/2021/08/25/database/MySQL%E4%BA%8B%E7%89%A9%E5%8E%9F%E7%90%86/"/>
    <id>https://github.com/CPyeah/2021/08/25/database/MySQL%E4%BA%8B%E7%89%A9%E5%8E%9F%E7%90%86/</id>
    <published>2021-08-25T01:12:24.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;什么是事务？！&lt;/p&gt;
&lt;p&gt;一句话来说，事务是一次操作的&lt;code&gt;逻辑单位&lt;/code&gt;。要不全部成功，要不全部失败。&lt;/p&gt;
&lt;p&gt;它主要是用来保证&lt;code&gt;数据一致性&lt;/code&gt;的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="mysql" scheme="https://github.com/CPyeah/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习及原理浅析</title>
    <link href="https://github.com/CPyeah/2021/08/13/database/MySQL%E5%AD%A6%E4%B9%A0%E5%8F%8A%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90/"/>
    <id>https://github.com/CPyeah/2021/08/13/database/MySQL%E5%AD%A6%E4%B9%A0%E5%8F%8A%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90/</id>
    <published>2021-08-13T03:06:53.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;从今天开始，我们将学习目前最流行的一个数据库MySQL。&lt;/p&gt;
&lt;p&gt;这篇文章，带大家走进Mysql的世界。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL的底层结构&lt;/li&gt;
&lt;li&gt;MySQL的查询过程&lt;/li&gt;
&lt;li&gt;索引结构&lt;/li&gt;
&lt;li&gt;MySQL的三种Log&lt;/li&gt;
&lt;li&gt;MySQL的存储引擎&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="mysql" scheme="https://github.com/CPyeah/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>ESL - Clean the house and relax</title>
    <link href="https://github.com/CPyeah/2021/07/18/english/clean-room/"/>
    <id>https://github.com/CPyeah/2021/07/18/english/clean-room/</id>
    <published>2021-07-18T02:00:51.000Z</published>
    <updated>2022-11-21T03:26:22.905Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;使用下面的关键词，写一篇小短文。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;energetic&lt;/li&gt;
&lt;li&gt;dust&amp;#x2F;dusting&lt;/li&gt;
&lt;li&gt;lamp&lt;/li&gt;
&lt;li&gt;furniture&lt;/li&gt;
&lt;li&gt;wipe&lt;/li&gt;
&lt;li&gt;rug&amp;#x2F;carpet&lt;/li&gt;
&lt;li&gt;filthy&lt;/li&gt;
&lt;li&gt;vacuum&lt;/li&gt;
&lt;li&gt;sucking&lt;/li&gt;
&lt;li&gt;mop&amp;#x2F;mopping&lt;/li&gt;
&lt;li&gt;broom&lt;/li&gt;
&lt;li&gt;scrub&amp;#x2F;scrubbing&lt;/li&gt;
&lt;li&gt;tub&lt;/li&gt;
&lt;li&gt;closet&lt;/li&gt;
&lt;li&gt;newscast&lt;/li&gt;
&lt;li&gt;cable television&lt;/li&gt;
&lt;li&gt;flip through&amp;#x2F;thumb through&lt;/li&gt;
&lt;li&gt;commercial&lt;/li&gt;
&lt;li&gt;reality show&lt;/li&gt;
&lt;li&gt;contest&lt;/li&gt;
&lt;li&gt;There is nothing like …&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="english" scheme="https://github.com/CPyeah/categories/english/"/>
    
    
    <category term="english" scheme="https://github.com/CPyeah/tags/english/"/>
    
    <category term="ESL" scheme="https://github.com/CPyeah/tags/ESL/"/>
    
    <category term="write" scheme="https://github.com/CPyeah/tags/write/"/>
    
    <category term="clean_room" scheme="https://github.com/CPyeah/tags/clean-room/"/>
    
  </entry>
  
  <entry>
    <title>十大排序算法</title>
    <link href="https://github.com/CPyeah/2021/07/06/algorithm/%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>https://github.com/CPyeah/2021/07/06/algorithm/%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2021-07-06T01:52:41.000Z</published>
    <updated>2022-11-21T03:26:22.765Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;今天开启我们的算法系列，争取说简单➕通俗易懂。&lt;br&gt;我们从经典的排序算法开始。学习十大排序算法。&lt;br&gt;&lt;img src=&quot;https://cp-images.oss-cn-hangzhou.aliyuncs.com/zoOH3H.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;排序算法可以分为两大类：基于比较的排序 and 不基于比较的排序。&lt;br&gt;基于比较的排序，是通过元素间的两两比较，来判断大小，继而排序。&lt;br&gt;不基于比较的排序，就是通过各种其他的方法，来让元素排序。&lt;/p&gt;
&lt;p&gt;在表格中，上面的7种都是基于比较的排序算法。下3种是不基于比较的排序。&lt;/p&gt;
&lt;p&gt;接下来我们一个一个的来仔细看。&lt;/p&gt;</summary>
    
    
    
    <category term="algorithm" scheme="https://github.com/CPyeah/categories/algorithm/"/>
    
    
    <category term="算法" scheme="https://github.com/CPyeah/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序算法" scheme="https://github.com/CPyeah/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="https://github.com/CPyeah/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java操作ElasticSearch</title>
    <link href="https://github.com/CPyeah/2021/06/11/java/Java%E6%93%8D%E4%BD%9CElasticSearch/"/>
    <id>https://github.com/CPyeah/2021/06/11/java/Java%E6%93%8D%E4%BD%9CElasticSearch/</id>
    <published>2021-06-11T05:44:15.000Z</published>
    <updated>2022-11-21T03:26:22.913Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;今天我们将使用Java来操作ElasticSearch。&lt;br&gt;我们将：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Docker搭建ES集群环境&lt;/li&gt;
&lt;li&gt;使用SpringBoot搭建Java环境&lt;/li&gt;
&lt;li&gt;在Java模型中定义ES的索引&lt;/li&gt;
&lt;li&gt;使用两种方式来操作ES（JPA和ElasticSearchTemplate）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="java" scheme="https://github.com/CPyeah/categories/java/"/>
    
    
    <category term="java" scheme="https://github.com/CPyeah/tags/java/"/>
    
    <category term="elasticsearch" scheme="https://github.com/CPyeah/tags/elasticsearch/"/>
    
    <category term="springboot" scheme="https://github.com/CPyeah/tags/springboot/"/>
    
    <category term="jpa" scheme="https://github.com/CPyeah/tags/jpa/"/>
    
    <category term="docker" scheme="https://github.com/CPyeah/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch学习及原理浅析</title>
    <link href="https://github.com/CPyeah/2021/05/27/database/ElasticSearch%E5%AD%A6%E4%B9%A0%E5%8F%8A%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90/"/>
    <id>https://github.com/CPyeah/2021/05/27/database/ElasticSearch%E5%AD%A6%E4%B9%A0%E5%8F%8A%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90/</id>
    <published>2021-05-27T07:29:29.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;这篇文章我们一起来学习一下最最流行的搜索引擎 - &lt;code&gt;ElasticSearch&lt;/code&gt;&lt;br&gt;我们将学习到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ES集群、节点类型、分片&lt;/li&gt;
&lt;li&gt;服务发现机制&lt;/li&gt;
&lt;li&gt;选举机制&lt;/li&gt;
&lt;li&gt;Docker搭建集群环境&lt;/li&gt;
&lt;li&gt;基础API操作&lt;/li&gt;
&lt;li&gt;ES的数据结构及文件系统&lt;/li&gt;
&lt;li&gt;存储文档的过程&lt;/li&gt;
&lt;li&gt;索引及搜索&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="java" scheme="https://github.com/CPyeah/tags/java/"/>
    
    <category term="elasticsearch" scheme="https://github.com/CPyeah/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Redis高级数据结构</title>
    <link href="https://github.com/CPyeah/2021/04/26/database/Redis%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>https://github.com/CPyeah/2021/04/26/database/Redis%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2021-04-26T07:15:43.000Z</published>
    <updated>2022-11-21T03:26:22.873Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;这篇文章介绍一下高级Redis数据结构，及其用法。&lt;/p&gt;
&lt;p&gt;在工作的使用频率很高。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分布式锁&lt;/li&gt;
&lt;li&gt;队列&lt;/li&gt;
&lt;li&gt;位图&lt;/li&gt;
&lt;li&gt;布隆过滤器&lt;/li&gt;
&lt;li&gt;HyperLogLog&lt;/li&gt;
&lt;li&gt;限流器&lt;/li&gt;
&lt;li&gt;GeoHash&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="database" scheme="https://github.com/CPyeah/categories/database/"/>
    
    
    <category term="java" scheme="https://github.com/CPyeah/tags/java/"/>
    
    <category term="redis" scheme="https://github.com/CPyeah/tags/redis/"/>
    
    <category term="redisson" scheme="https://github.com/CPyeah/tags/redisson/"/>
    
  </entry>
  
  <entry>
    <title>Java操作Redis</title>
    <link href="https://github.com/CPyeah/2021/03/25/java/Java%E6%93%8D%E4%BD%9CRedis/"/>
    <id>https://github.com/CPyeah/2021/03/25/java/Java%E6%93%8D%E4%BD%9CRedis/</id>
    <published>2021-03-25T02:18:43.000Z</published>
    <updated>2022-11-21T03:26:22.913Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Redis是目前最流行的缓存数据库，完全基于内存操作，速度非常快。&lt;br&gt;它是我们互联网公司高性能，高并发的基石。&lt;br&gt;它的功能包括但不限于：提供中央缓存功能，分布式锁，还有特殊数据结构的特殊应用。&lt;br&gt;本篇文章都会一一说到。&lt;/p&gt;
&lt;p&gt;接下来我们会：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Docker搭建redis环境&lt;/li&gt;
&lt;li&gt;搭建springboot服务&lt;/li&gt;
&lt;li&gt;使用redisson来操作redis&lt;/li&gt;
&lt;li&gt;熟悉redis的五大基本数据类型&lt;/li&gt;
&lt;li&gt;熟悉使用redis的高级数据结构及其应用&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="java" scheme="https://github.com/CPyeah/categories/java/"/>
    
    
    <category term="java" scheme="https://github.com/CPyeah/tags/java/"/>
    
    <category term="redis" scheme="https://github.com/CPyeah/tags/redis/"/>
    
    <category term="redisson" scheme="https://github.com/CPyeah/tags/redisson/"/>
    
  </entry>
  
</feed>
